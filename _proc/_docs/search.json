[
  {
    "objectID": "posts/future_map.html",
    "href": "posts/future_map.html",
    "title": "Future Map",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "posts/future_plan.html",
    "href": "posts/future_plan.html",
    "title": "Future Plan",
    "section": "",
    "text": "git,\nphisaver integration\nclean up\nFFT"
  },
  {
    "objectID": "posts/future_plan.html#internship",
    "href": "posts/future_plan.html#internship",
    "title": "Future Plan",
    "section": "",
    "text": "git,\nphisaver integration\nclean up\nFFT"
  },
  {
    "objectID": "posts/future_plan.html#laser",
    "href": "posts/future_plan.html#laser",
    "title": "Future Plan",
    "section": "Laser",
    "text": "Laser\n\nshipstation\nphotoshop\ndesigns"
  },
  {
    "objectID": "posts/future_plan.html#fastai-csseml-matlab",
    "href": "posts/future_plan.html#fastai-csseml-matlab",
    "title": "Future Plan",
    "section": "FASTAI, CSSEML, MATLAB",
    "text": "FASTAI, CSSEML, MATLAB"
  },
  {
    "objectID": "posts/future_plan.html#drone---drop-shipping",
    "href": "posts/future_plan.html#drone---drop-shipping",
    "title": "Future Plan",
    "section": "Drone - Drop shipping",
    "text": "Drone - Drop shipping"
  },
  {
    "objectID": "posts/future_plan.html#blog---clean-up",
    "href": "posts/future_plan.html#blog---clean-up",
    "title": "Future Plan",
    "section": "Blog - clean up",
    "text": "Blog - clean up"
  },
  {
    "objectID": "posts/future_plan.html#mltools",
    "href": "posts/future_plan.html#mltools",
    "title": "Future Plan",
    "section": "MLTOOLS",
    "text": "MLTOOLS\n\nmatplot\nnumpy\nscipy\ngit fork, submodules"
  },
  {
    "objectID": "posts/future_plan.html#webdevelopment",
    "href": "posts/future_plan.html#webdevelopment",
    "title": "Future Plan",
    "section": "Webdevelopment",
    "text": "Webdevelopment\n\noracle\ndjango\nreact"
  },
  {
    "objectID": "posts/future_plan.html#app-development",
    "href": "posts/future_plan.html#app-development",
    "title": "Future Plan",
    "section": "App development",
    "text": "App development\n\nflutter\n3D vision"
  },
  {
    "objectID": "posts/time_series_analysis.html",
    "href": "posts/time_series_analysis.html",
    "title": "Building, testing and Deploying Time-Series ML models",
    "section": "",
    "text": "https://bthek1.github.io/TimeSeriesML/"
  },
  {
    "objectID": "posts/time_series_analysis.html#time-series-analysis",
    "href": "posts/time_series_analysis.html#time-series-analysis",
    "title": "Building, testing and Deploying Time-Series ML models",
    "section": "",
    "text": "https://bthek1.github.io/TimeSeriesML/"
  },
  {
    "objectID": "posts/exploring_machine_learning.html",
    "href": "posts/exploring_machine_learning.html",
    "title": "Exploring Machine Learning",
    "section": "",
    "text": "https://bthek1.github.io/ML/"
  },
  {
    "objectID": "posts/exploring_machine_learning.html#machine-learning-techniques",
    "href": "posts/exploring_machine_learning.html#machine-learning-techniques",
    "title": "Exploring Machine Learning",
    "section": "",
    "text": "https://bthek1.github.io/ML/"
  },
  {
    "objectID": "posts/exploring_machine_learning.html#helpful-tools-and-libraries-for-ml",
    "href": "posts/exploring_machine_learning.html#helpful-tools-and-libraries-for-ml",
    "title": "Exploring Machine Learning",
    "section": "Helpful tools and Libraries for ML",
    "text": "Helpful tools and Libraries for ML\nhttps://bthek1.github.io/MLtools/"
  },
  {
    "objectID": "posts/web_development.html",
    "href": "posts/web_development.html",
    "title": "Adventure into Web and App development",
    "section": "",
    "text": "https://bthek1.github.io/webdevelopment_doc/"
  },
  {
    "objectID": "posts/web_development.html#web-development",
    "href": "posts/web_development.html#web-development",
    "title": "Adventure into Web and App development",
    "section": "",
    "text": "https://bthek1.github.io/webdevelopment_doc/"
  },
  {
    "objectID": "posts/creating_pypi_library.html",
    "href": "posts/creating_pypi_library.html",
    "title": "Creating Pypi Library",
    "section": "",
    "text": "https://bthek1.github.io/nbdevAuto/functions.html"
  },
  {
    "objectID": "posts/creating_pypi_library.html#nbdevauto",
    "href": "posts/creating_pypi_library.html#nbdevauto",
    "title": "Creating Pypi Library",
    "section": "",
    "text": "https://bthek1.github.io/nbdevAuto/functions.html"
  },
  {
    "objectID": "posts/01_Exploring_Deeplearning.html",
    "href": "posts/01_Exploring_Deeplearning.html",
    "title": "Exploring Deeplearning",
    "section": "",
    "text": "https://bthek1.github.io/FastAISetup/\n\nThe repo FastAISetup contains a complete breakdown and setup process for your computer to be able to use for AI development\nInstruction on setting up: - Computer WSL environment - Conda environment - Nbdev installation - Quarto installation - Pytorch installation - FastAI setup - FastAI testing - Juptyer guide for future reference - Latex installation"
  },
  {
    "objectID": "posts/01_Exploring_Deeplearning.html#fast-ai-setup",
    "href": "posts/01_Exploring_Deeplearning.html#fast-ai-setup",
    "title": "Exploring Deeplearning",
    "section": "",
    "text": "https://bthek1.github.io/FastAISetup/\n\nThe repo FastAISetup contains a complete breakdown and setup process for your computer to be able to use for AI development\nInstruction on setting up: - Computer WSL environment - Conda environment - Nbdev installation - Quarto installation - Pytorch installation - FastAI setup - FastAI testing - Juptyer guide for future reference - Latex installation"
  },
  {
    "objectID": "posts/01_Exploring_Deeplearning.html#fast-ai-course",
    "href": "posts/01_Exploring_Deeplearning.html#fast-ai-course",
    "title": "Exploring Deeplearning",
    "section": "Fast AI course",
    "text": "Fast AI course\n\nhttps://bthek1.github.io/fastAIcourse/\n\nFast AI course, as its named is my recreation of FastAI course by Jeremy Howard. Theres are the notes I used to learn and experiement in the contents of the course.\nIncludes: - Exploring FastAI - Deploying using Hugging Face - Developing FastAI from scratch - Developing Diffusion Models - Developing Resnet Models"
  },
  {
    "objectID": "posts/01_Exploring_Deeplearning.html#deep-learning-from-scratch",
    "href": "posts/01_Exploring_Deeplearning.html#deep-learning-from-scratch",
    "title": "Exploring Deeplearning",
    "section": "Deep Learning from Scratch",
    "text": "Deep Learning from Scratch\n\nhttps://bthek1.github.io/DeepLearning/\n\nDeep Learning is the repo dedicated to learning the low level coding of Deep Learning models. It will also dive deeper into Image classification, detection, and segmentation in the future."
  },
  {
    "objectID": "posts/02_Exploring_Machine_Learning.html",
    "href": "posts/02_Exploring_Machine_Learning.html",
    "title": "Exploring Machine Learning",
    "section": "",
    "text": "https://bthek1.github.io/ML/\n\nThe ML repo contains example code of most of the popular ML techniques. Created to be a useful quick reference quide for ML developement. Techniques ranging from: - KNN - Decision Tree - Linear Regression - Logistic Regression - L1 and L2 Regularication - Ensemble Methods - Naive Bayes - Supper Vector Regression (SVR) - Random Forest - Principal Component Analysis (PCA) - CNN"
  },
  {
    "objectID": "posts/02_Exploring_Machine_Learning.html#machine-learning-techniques",
    "href": "posts/02_Exploring_Machine_Learning.html#machine-learning-techniques",
    "title": "Exploring Machine Learning",
    "section": "",
    "text": "https://bthek1.github.io/ML/\n\nThe ML repo contains example code of most of the popular ML techniques. Created to be a useful quick reference quide for ML developement. Techniques ranging from: - KNN - Decision Tree - Linear Regression - Logistic Regression - L1 and L2 Regularication - Ensemble Methods - Naive Bayes - Supper Vector Regression (SVR) - Random Forest - Principal Component Analysis (PCA) - CNN"
  },
  {
    "objectID": "posts/02_Exploring_Machine_Learning.html#helpful-tools-and-libraries-for-ml",
    "href": "posts/02_Exploring_Machine_Learning.html#helpful-tools-and-libraries-for-ml",
    "title": "Exploring Machine Learning",
    "section": "Helpful tools and Libraries for ML",
    "text": "Helpful tools and Libraries for ML\n\nhttps://bthek1.github.io/MLtools/\n\nML tools repo contain the breakdown of often used python libraries in conjuction with ML development. Created as a quick reference when trying to remember particular functions. The libraries include:\n- Matplotlib - Numpy - Scipy - Pandas - Pivot Tables - Pytube - Mito - Altair - Tqdm - Ipywidget - Tmux - breakdown of Python class and design structures"
  },
  {
    "objectID": "posts/03_Time_Series_Analysis.html",
    "href": "posts/03_Time_Series_Analysis.html",
    "title": "Building, testing and Deploying Time-Series ML models",
    "section": "",
    "text": "https://bthek1.github.io/TimeSeriesML/\n\nDeveloped during my exploration of Time Series Machine Learning methodologies for my internship, this Time Series technique operates similarly to traditional ML models. However, due to the temporal nature of the data, many techniques require adjustments and sequential training to effectively capture patterns and make accurate predictions.\nIn time series ML, models need to be trained and evaluated differently. For instance, instead of randomly splitting data into training and testing sets, chronological ordering is crucial, with earlier data used for training and later data for testing. Additionally, techniques like feature engineering may involve creating lag features or rolling statistics to capture temporal patterns.\nOverall, the primary difference lies in how time series ML methods handle the time-dependent nature of the data, requiring specialized techniques tailored to sequential data analysis.\n\n\nStatical models: - AutoARIMA - HoltWinters - CrostonClassic - HistoricAverage - DynamicOptimizedTheta as DOT - SeasonalNaive - MSTL\nML models: - XGBRegressor - LGBMRegressor - LinearRegression\nNeural Networks - NBEATS - NHITS - MLP - RNN - LSTM\n\n\n\n\nNixtla\nDarts\nXGBoost\nProphet"
  },
  {
    "objectID": "posts/03_Time_Series_Analysis.html#time-series-analysis",
    "href": "posts/03_Time_Series_Analysis.html#time-series-analysis",
    "title": "Building, testing and Deploying Time-Series ML models",
    "section": "",
    "text": "https://bthek1.github.io/TimeSeriesML/\n\nDeveloped during my exploration of Time Series Machine Learning methodologies for my internship, this Time Series technique operates similarly to traditional ML models. However, due to the temporal nature of the data, many techniques require adjustments and sequential training to effectively capture patterns and make accurate predictions.\nIn time series ML, models need to be trained and evaluated differently. For instance, instead of randomly splitting data into training and testing sets, chronological ordering is crucial, with earlier data used for training and later data for testing. Additionally, techniques like feature engineering may involve creating lag features or rolling statistics to capture temporal patterns.\nOverall, the primary difference lies in how time series ML methods handle the time-dependent nature of the data, requiring specialized techniques tailored to sequential data analysis.\n\n\nStatical models: - AutoARIMA - HoltWinters - CrostonClassic - HistoricAverage - DynamicOptimizedTheta as DOT - SeasonalNaive - MSTL\nML models: - XGBRegressor - LGBMRegressor - LinearRegression\nNeural Networks - NBEATS - NHITS - MLP - RNN - LSTM\n\n\n\n\nNixtla\nDarts\nXGBoost\nProphet"
  },
  {
    "objectID": "posts/04_Web_Development.html",
    "href": "posts/04_Web_Development.html",
    "title": "Adventure into Web and App development",
    "section": "",
    "text": "https://bthek1.github.io/webdevelopment_doc/\n\nWeb Developement contains information many of servers application I have used untill now aswell as database and front-end applications. There include:\nBack-end - Influx - Django - Nginx - Docker - Prefect\nFront-end - Streamlit - Gradio - Flutter - React - React-Naive"
  },
  {
    "objectID": "posts/04_Web_Development.html#web-development",
    "href": "posts/04_Web_Development.html#web-development",
    "title": "Adventure into Web and App development",
    "section": "",
    "text": "https://bthek1.github.io/webdevelopment_doc/\n\nWeb Developement contains information many of servers application I have used untill now aswell as database and front-end applications. There include:\nBack-end - Influx - Django - Nginx - Docker - Prefect\nFront-end - Streamlit - Gradio - Flutter - React - React-Naive"
  },
  {
    "objectID": "posts/05_Creating_pypi_library.html",
    "href": "posts/05_Creating_pypi_library.html",
    "title": "Creating Pypi Library",
    "section": "",
    "text": "https://bthek1.github.io/nbdevAuto/functions.html\nThis automation library was created for the perpose of speed up common daily task.\nLike for example, after pip install nbdevAuto. The cli command upload will automatically: - nbdev_clean - nbdev_export - git add .\n\ngit push.\n\nAlso, the library contains function to simplify download images for the internet for image classification deep learning like:\n\n!pip list | grep nbdevAuto\n\nnbdevAuto                           0.0.112     /home/ben/BENEDICT_Only/Benedict_Projects/Benedict_ML/nbdevAuto\n\n\n\nfrom nbdevAuto import *\n\n\ndownload_pic?\n\nObject `download_pic` not found."
  },
  {
    "objectID": "posts/05_Creating_pypi_library.html#nbdevauto",
    "href": "posts/05_Creating_pypi_library.html#nbdevauto",
    "title": "Creating Pypi Library",
    "section": "",
    "text": "https://bthek1.github.io/nbdevAuto/functions.html\nThis automation library was created for the perpose of speed up common daily task.\nLike for example, after pip install nbdevAuto. The cli command upload will automatically: - nbdev_clean - nbdev_export - git add .\n\ngit push.\n\nAlso, the library contains function to simplify download images for the internet for image classification deep learning like:\n\n!pip list | grep nbdevAuto\n\nnbdevAuto                           0.0.112     /home/ben/BENEDICT_Only/Benedict_Projects/Benedict_ML/nbdevAuto\n\n\n\nfrom nbdevAuto import *\n\n\ndownload_pic?\n\nObject `download_pic` not found."
  },
  {
    "objectID": "posts/91_Future_Map.html",
    "href": "posts/91_Future_Map.html",
    "title": "Future Map",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "posts/90_Future_Plan.html",
    "href": "posts/90_Future_Plan.html",
    "title": "Future Plan",
    "section": "",
    "text": "git,\nphisaver integration\nclean up\nFFT"
  },
  {
    "objectID": "posts/90_Future_Plan.html#internship",
    "href": "posts/90_Future_Plan.html#internship",
    "title": "Future Plan",
    "section": "",
    "text": "git,\nphisaver integration\nclean up\nFFT"
  },
  {
    "objectID": "posts/90_Future_Plan.html#laser",
    "href": "posts/90_Future_Plan.html#laser",
    "title": "Future Plan",
    "section": "Laser",
    "text": "Laser\n\nshipstation\nphotoshop\ndesigns"
  },
  {
    "objectID": "posts/90_Future_Plan.html#fastai-csseml-matlab",
    "href": "posts/90_Future_Plan.html#fastai-csseml-matlab",
    "title": "Future Plan",
    "section": "FASTAI, CSSEML, MATLAB",
    "text": "FASTAI, CSSEML, MATLAB"
  },
  {
    "objectID": "posts/90_Future_Plan.html#drone---drop-shipping",
    "href": "posts/90_Future_Plan.html#drone---drop-shipping",
    "title": "Future Plan",
    "section": "Drone - Drop shipping",
    "text": "Drone - Drop shipping"
  },
  {
    "objectID": "posts/90_Future_Plan.html#blog---clean-up",
    "href": "posts/90_Future_Plan.html#blog---clean-up",
    "title": "Future Plan",
    "section": "Blog - clean up",
    "text": "Blog - clean up"
  },
  {
    "objectID": "posts/90_Future_Plan.html#mltools",
    "href": "posts/90_Future_Plan.html#mltools",
    "title": "Future Plan",
    "section": "MLTOOLS",
    "text": "MLTOOLS\n\nmatplot\nnumpy\nscipy\ngit fork, submodules"
  },
  {
    "objectID": "posts/90_Future_Plan.html#webdevelopment",
    "href": "posts/90_Future_Plan.html#webdevelopment",
    "title": "Future Plan",
    "section": "Webdevelopment",
    "text": "Webdevelopment\n\noracle\ndjango\nreact"
  },
  {
    "objectID": "posts/90_Future_Plan.html#app-development",
    "href": "posts/90_Future_Plan.html#app-development",
    "title": "Future Plan",
    "section": "App development",
    "text": "App development\n\nflutter\n3D vision"
  },
  {
    "objectID": "posts/01_Exploring_Deeplearning.html#insturction-on-setup-up",
    "href": "posts/01_Exploring_Deeplearning.html#insturction-on-setup-up",
    "title": "Exploring Deeplearning",
    "section": "Insturction on setup up:",
    "text": "Insturction on setup up:"
  },
  {
    "objectID": "posts/05_Creating_pypi_library.html#also-the-library-contains-function-to-simplify-download-images-for-the-internet-for-image-classification-deep-learning-like",
    "href": "posts/05_Creating_pypi_library.html#also-the-library-contains-function-to-simplify-download-images-for-the-internet-for-image-classification-deep-learning-like",
    "title": "Creating Pypi Library",
    "section": "Also, the library contains function to simplify download images for the internet for image classification deep learning like:",
    "text": "Also, the library contains function to simplify download images for the internet for image classification deep learning like:"
  }
]